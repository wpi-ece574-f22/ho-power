/* Generated by Yosys 0.9 (git sha1 1979e0b) */

(* top =  1  *)
(* src = "../rtl/gcounter.v:28" *)
module gcounter(clk, reset, q);
  (* src = "../rtl/gcounter.v:35" *)
  wire _0_;
  (* src = "../rtl/gcounter.v:29" *)
  input clk;
  (* src = "../rtl/gcounter.v:30" *)
  output [31:0] q;
  (* src = "../rtl/gcounter.v:29" *)
  input reset;
  (* src = "../rtl/gcounter.v:33" *)
  wire t;
  (* src = "../rtl/gcounter.v:33" *)
  wire t_next;
  (* src = "../rtl/gcounter.v:28" *)
  (* unused_bits = "0" *)
  wire \zv[0] ;
  (* src = "../rtl/gcounter.v:28" *)
  wire \zv[10] ;
  (* src = "../rtl/gcounter.v:28" *)
  wire \zv[11] ;
  (* src = "../rtl/gcounter.v:28" *)
  wire \zv[12] ;
  (* src = "../rtl/gcounter.v:28" *)
  wire \zv[13] ;
  (* src = "../rtl/gcounter.v:28" *)
  wire \zv[14] ;
  (* src = "../rtl/gcounter.v:28" *)
  wire \zv[15] ;
  (* src = "../rtl/gcounter.v:28" *)
  wire \zv[16] ;
  (* src = "../rtl/gcounter.v:28" *)
  wire \zv[17] ;
  (* src = "../rtl/gcounter.v:28" *)
  wire \zv[18] ;
  (* src = "../rtl/gcounter.v:28" *)
  wire \zv[19] ;
  (* src = "../rtl/gcounter.v:28" *)
  wire \zv[1] ;
  (* src = "../rtl/gcounter.v:28" *)
  wire \zv[20] ;
  (* src = "../rtl/gcounter.v:28" *)
  wire \zv[21] ;
  (* src = "../rtl/gcounter.v:28" *)
  wire \zv[22] ;
  (* src = "../rtl/gcounter.v:28" *)
  wire \zv[23] ;
  (* src = "../rtl/gcounter.v:28" *)
  wire \zv[24] ;
  (* src = "../rtl/gcounter.v:28" *)
  wire \zv[25] ;
  (* src = "../rtl/gcounter.v:28" *)
  wire \zv[26] ;
  (* src = "../rtl/gcounter.v:28" *)
  wire \zv[27] ;
  (* src = "../rtl/gcounter.v:28" *)
  wire \zv[28] ;
  (* src = "../rtl/gcounter.v:28" *)
  wire \zv[29] ;
  (* src = "../rtl/gcounter.v:28" *)
  wire \zv[2] ;
  (* src = "../rtl/gcounter.v:28" *)
  wire \zv[30] ;
  (* src = "../rtl/gcounter.v:28" *)
  (* unused_bits = "0" *)
  wire \zv[31] ;
  (* src = "../rtl/gcounter.v:28" *)
  wire \zv[3] ;
  (* src = "../rtl/gcounter.v:28" *)
  wire \zv[4] ;
  (* src = "../rtl/gcounter.v:28" *)
  wire \zv[5] ;
  (* src = "../rtl/gcounter.v:28" *)
  wire \zv[6] ;
  (* src = "../rtl/gcounter.v:28" *)
  wire \zv[7] ;
  (* src = "../rtl/gcounter.v:28" *)
  wire \zv[8] ;
  (* src = "../rtl/gcounter.v:28" *)
  wire \zv[9] ;
  sky130_fd_sc_hd__nor2_1 _1_ (
    .A(t),
    .B(reset),
    .Y(_0_)
  );
  sky130_fd_sc_hd__inv_1 _2_ (
    .A(t),
    .Y(t_next)
  );
  (* src = "../rtl/gcounter.v:35" *)
  sky130_fd_sc_hd__dfxtp_1 _3_ (
    .CLK(clk),
    .D(_0_),
    .Q(t)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "../rtl/gcounter.v:46" *)
  gcountercell b00 (
    .clk(clk),
    .parity(t_next),
    .q_i(1'h1),
    .q_o(q[0]),
    .reset(reset),
    .z_i(1'h1),
    .z_o(\zv[0] )
  );
  (* module_not_derived = 32'd1 *)
  (* src = "../rtl/gcounter.v:47" *)
  gcountercell b01 (
    .clk(clk),
    .parity(t),
    .q_i(q[0]),
    .q_o(q[1]),
    .reset(reset),
    .z_i(1'h1),
    .z_o(\zv[1] )
  );
  (* module_not_derived = 32'd1 *)
  (* src = "../rtl/gcounter.v:48" *)
  gcountercell b02 (
    .clk(clk),
    .parity(t),
    .q_i(q[1]),
    .q_o(q[2]),
    .reset(reset),
    .z_i(\zv[1] ),
    .z_o(\zv[2] )
  );
  (* module_not_derived = 32'd1 *)
  (* src = "../rtl/gcounter.v:49" *)
  gcountercell b03 (
    .clk(clk),
    .parity(t),
    .q_i(q[2]),
    .q_o(q[3]),
    .reset(reset),
    .z_i(\zv[2] ),
    .z_o(\zv[3] )
  );
  (* module_not_derived = 32'd1 *)
  (* src = "../rtl/gcounter.v:50" *)
  gcountercell b04 (
    .clk(clk),
    .parity(t),
    .q_i(q[3]),
    .q_o(q[4]),
    .reset(reset),
    .z_i(\zv[3] ),
    .z_o(\zv[4] )
  );
  (* module_not_derived = 32'd1 *)
  (* src = "../rtl/gcounter.v:51" *)
  gcountercell b05 (
    .clk(clk),
    .parity(t),
    .q_i(q[4]),
    .q_o(q[5]),
    .reset(reset),
    .z_i(\zv[4] ),
    .z_o(\zv[5] )
  );
  (* module_not_derived = 32'd1 *)
  (* src = "../rtl/gcounter.v:52" *)
  gcountercell b06 (
    .clk(clk),
    .parity(t),
    .q_i(q[5]),
    .q_o(q[6]),
    .reset(reset),
    .z_i(\zv[5] ),
    .z_o(\zv[6] )
  );
  (* module_not_derived = 32'd1 *)
  (* src = "../rtl/gcounter.v:53" *)
  gcountercell b07 (
    .clk(clk),
    .parity(t),
    .q_i(q[6]),
    .q_o(q[7]),
    .reset(reset),
    .z_i(\zv[6] ),
    .z_o(\zv[7] )
  );
  (* module_not_derived = 32'd1 *)
  (* src = "../rtl/gcounter.v:54" *)
  gcountercell b08 (
    .clk(clk),
    .parity(t),
    .q_i(q[7]),
    .q_o(q[8]),
    .reset(reset),
    .z_i(\zv[7] ),
    .z_o(\zv[8] )
  );
  (* module_not_derived = 32'd1 *)
  (* src = "../rtl/gcounter.v:55" *)
  gcountercell b09 (
    .clk(clk),
    .parity(t),
    .q_i(q[8]),
    .q_o(q[9]),
    .reset(reset),
    .z_i(\zv[8] ),
    .z_o(\zv[9] )
  );
  (* module_not_derived = 32'd1 *)
  (* src = "../rtl/gcounter.v:56" *)
  gcountercell b10 (
    .clk(clk),
    .parity(t),
    .q_i(q[9]),
    .q_o(q[10]),
    .reset(reset),
    .z_i(\zv[9] ),
    .z_o(\zv[10] )
  );
  (* module_not_derived = 32'd1 *)
  (* src = "../rtl/gcounter.v:57" *)
  gcountercell b11 (
    .clk(clk),
    .parity(t),
    .q_i(q[10]),
    .q_o(q[11]),
    .reset(reset),
    .z_i(\zv[10] ),
    .z_o(\zv[11] )
  );
  (* module_not_derived = 32'd1 *)
  (* src = "../rtl/gcounter.v:58" *)
  gcountercell b12 (
    .clk(clk),
    .parity(t),
    .q_i(q[11]),
    .q_o(q[12]),
    .reset(reset),
    .z_i(\zv[11] ),
    .z_o(\zv[12] )
  );
  (* module_not_derived = 32'd1 *)
  (* src = "../rtl/gcounter.v:59" *)
  gcountercell b13 (
    .clk(clk),
    .parity(t),
    .q_i(q[12]),
    .q_o(q[13]),
    .reset(reset),
    .z_i(\zv[12] ),
    .z_o(\zv[13] )
  );
  (* module_not_derived = 32'd1 *)
  (* src = "../rtl/gcounter.v:60" *)
  gcountercell b14 (
    .clk(clk),
    .parity(t),
    .q_i(q[13]),
    .q_o(q[14]),
    .reset(reset),
    .z_i(\zv[13] ),
    .z_o(\zv[14] )
  );
  (* module_not_derived = 32'd1 *)
  (* src = "../rtl/gcounter.v:61" *)
  gcountercell b15 (
    .clk(clk),
    .parity(t),
    .q_i(q[14]),
    .q_o(q[15]),
    .reset(reset),
    .z_i(\zv[14] ),
    .z_o(\zv[15] )
  );
  (* module_not_derived = 32'd1 *)
  (* src = "../rtl/gcounter.v:62" *)
  gcountercell b16 (
    .clk(clk),
    .parity(t),
    .q_i(q[15]),
    .q_o(q[16]),
    .reset(reset),
    .z_i(\zv[15] ),
    .z_o(\zv[16] )
  );
  (* module_not_derived = 32'd1 *)
  (* src = "../rtl/gcounter.v:63" *)
  gcountercell b17 (
    .clk(clk),
    .parity(t),
    .q_i(q[16]),
    .q_o(q[17]),
    .reset(reset),
    .z_i(\zv[16] ),
    .z_o(\zv[17] )
  );
  (* module_not_derived = 32'd1 *)
  (* src = "../rtl/gcounter.v:64" *)
  gcountercell b18 (
    .clk(clk),
    .parity(t),
    .q_i(q[17]),
    .q_o(q[18]),
    .reset(reset),
    .z_i(\zv[17] ),
    .z_o(\zv[18] )
  );
  (* module_not_derived = 32'd1 *)
  (* src = "../rtl/gcounter.v:65" *)
  gcountercell b19 (
    .clk(clk),
    .parity(t),
    .q_i(q[18]),
    .q_o(q[19]),
    .reset(reset),
    .z_i(\zv[18] ),
    .z_o(\zv[19] )
  );
  (* module_not_derived = 32'd1 *)
  (* src = "../rtl/gcounter.v:66" *)
  gcountercell b20 (
    .clk(clk),
    .parity(t),
    .q_i(q[19]),
    .q_o(q[20]),
    .reset(reset),
    .z_i(\zv[19] ),
    .z_o(\zv[20] )
  );
  (* module_not_derived = 32'd1 *)
  (* src = "../rtl/gcounter.v:67" *)
  gcountercell b21 (
    .clk(clk),
    .parity(t),
    .q_i(q[20]),
    .q_o(q[21]),
    .reset(reset),
    .z_i(\zv[20] ),
    .z_o(\zv[21] )
  );
  (* module_not_derived = 32'd1 *)
  (* src = "../rtl/gcounter.v:68" *)
  gcountercell b22 (
    .clk(clk),
    .parity(t),
    .q_i(q[21]),
    .q_o(q[22]),
    .reset(reset),
    .z_i(\zv[21] ),
    .z_o(\zv[22] )
  );
  (* module_not_derived = 32'd1 *)
  (* src = "../rtl/gcounter.v:69" *)
  gcountercell b23 (
    .clk(clk),
    .parity(t),
    .q_i(q[22]),
    .q_o(q[23]),
    .reset(reset),
    .z_i(\zv[22] ),
    .z_o(\zv[23] )
  );
  (* module_not_derived = 32'd1 *)
  (* src = "../rtl/gcounter.v:70" *)
  gcountercell b24 (
    .clk(clk),
    .parity(t),
    .q_i(q[23]),
    .q_o(q[24]),
    .reset(reset),
    .z_i(\zv[23] ),
    .z_o(\zv[24] )
  );
  (* module_not_derived = 32'd1 *)
  (* src = "../rtl/gcounter.v:71" *)
  gcountercell b25 (
    .clk(clk),
    .parity(t),
    .q_i(q[24]),
    .q_o(q[25]),
    .reset(reset),
    .z_i(\zv[24] ),
    .z_o(\zv[25] )
  );
  (* module_not_derived = 32'd1 *)
  (* src = "../rtl/gcounter.v:72" *)
  gcountercell b26 (
    .clk(clk),
    .parity(t),
    .q_i(q[25]),
    .q_o(q[26]),
    .reset(reset),
    .z_i(\zv[25] ),
    .z_o(\zv[26] )
  );
  (* module_not_derived = 32'd1 *)
  (* src = "../rtl/gcounter.v:73" *)
  gcountercell b27 (
    .clk(clk),
    .parity(t),
    .q_i(q[26]),
    .q_o(q[27]),
    .reset(reset),
    .z_i(\zv[26] ),
    .z_o(\zv[27] )
  );
  (* module_not_derived = 32'd1 *)
  (* src = "../rtl/gcounter.v:74" *)
  gcountercell b28 (
    .clk(clk),
    .parity(t),
    .q_i(q[27]),
    .q_o(q[28]),
    .reset(reset),
    .z_i(\zv[27] ),
    .z_o(\zv[28] )
  );
  (* module_not_derived = 32'd1 *)
  (* src = "../rtl/gcounter.v:75" *)
  gcountercell b29 (
    .clk(clk),
    .parity(t),
    .q_i(q[28]),
    .q_o(q[29]),
    .reset(reset),
    .z_i(\zv[28] ),
    .z_o(\zv[29] )
  );
  (* module_not_derived = 32'd1 *)
  (* src = "../rtl/gcounter.v:76" *)
  gcountercell b30 (
    .clk(clk),
    .parity(t),
    .q_i(q[29]),
    .q_o(q[30]),
    .reset(reset),
    .z_i(\zv[29] ),
    .z_o(\zv[30] )
  );
  (* module_not_derived = 32'd1 *)
  (* src = "../rtl/gcounter.v:77" *)
  gcountercell b31 (
    .clk(clk),
    .parity(t),
    .q_i(q[30]),
    .q_o(q[31]),
    .reset(reset),
    .z_i(\zv[30] ),
    .z_o(\zv[31] )
  );
endmodule

(* src = "../rtl/gcounter.v:1" *)
module gcountercell(clk, reset, q_i, z_i, parity, z_o, q_o);
  (* src = "../rtl/gcounter.v:10" *)
  wire _0_;
  wire _1_;
  wire _2_;
  wire _3_;
  (* src = "../rtl/gcounter.v:1" *)
  input clk;
  (* src = "../rtl/gcounter.v:4" *)
  input parity;
  (* src = "../rtl/gcounter.v:2" *)
  input q_i;
  (* src = "../rtl/gcounter.v:6" *)
  output q_o;
  (* src = "../rtl/gcounter.v:1" *)
  input reset;
  (* src = "../rtl/gcounter.v:3" *)
  input z_i;
  (* src = "../rtl/gcounter.v:5" *)
  output z_o;
  sky130_fd_sc_hd__nor2_1 _4_ (
    .A(q_o),
    .B(reset),
    .Y(_2_)
  );
  sky130_fd_sc_hd__lpflow_isobufsrc_1 _5_ (
    .A(q_o),
    .SLEEP(reset),
    .X(_3_)
  );
  sky130_fd_sc_hd__nand3_2 _6_ (
    .A(parity),
    .B(z_i),
    .C(q_i),
    .Y(_1_)
  );
  sky130_fd_sc_hd__mux2_1 _7_ (
    .A0(_2_),
    .A1(_3_),
    .S(_1_),
    .X(_0_)
  );
  sky130_fd_sc_hd__lpflow_isobufsrc_1 _8_ (
    .A(z_i),
    .SLEEP(q_i),
    .X(z_o)
  );
  (* src = "../rtl/gcounter.v:10" *)
  sky130_fd_sc_hd__dfxtp_1 _9_ (
    .CLK(clk),
    .D(_0_),
    .Q(q_o)
  );
endmodule
